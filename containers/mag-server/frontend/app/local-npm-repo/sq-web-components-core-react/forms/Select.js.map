{"version":3,"sources":["forms/Select.tsx"],"names":[],"mappings":"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","file":"Select.js","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\n\nexport interface SelectProps extends NamespaceWrapperProps {\n    /**\n     * The list of options to show\n     */\n    options?: { [key: string]: string };\n\n    /**\n     * The currently selected option\n     *\n     * @todo rename to value\n     */\n    selectedOptionValue?: string;\n\n    /**\n     * Triggered when a value is changed\n     */\n    onChange?: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n\n    /**\n     * Disable the select\n     */\n    disabled?: boolean;\n\n    /**\n     * ???\n     */\n    active?: boolean;\n\n    /**\n     * Select is loading\n     */\n    loading?: boolean;\n\n    /**\n     * Add a class to the container, prefer modifiers\n     */\n    className?: string;\n\n    /**\n     * set the level\n     */\n    level?: \"info\" | \"warning\" | \"error\" | \"success\";\n\n    /**\n     * set the size\n     */\n    size?: \"small\"| \"large\";\n\n    /**\n     * The field's name\n     */\n    name?: string;\n}\n\nexport default class Select extends NamespaceWrapper<SelectProps, {}> {\n    public static displayName = \"Select\";\n\n    public static propTypes = {//\n        \"options\": PropTypes.object, //\n        \"selectedOptionValue\": PropTypes.string, //\n        \"disabled\": PropTypes.bool, //\n        \"active\": PropTypes.bool, //\n        \"loading\": PropTypes.bool, //\n\n        \"onChange\": PropTypes.func, //\n\n        \"className\": PropTypes.string, //\n        \"level\": PropTypes.oneOf([\"info\", \"warning\", \"error\", \"success\"]), //\n        \"size\": PropTypes.oneOf([\"small\", \"large\"])\n    };\n\n\n    private buildOptionsList() {\n        const optionsList = [];\n        for (let key in this.props.options) {\n            if (!this.props.options.hasOwnProperty(key)) {\n                continue;\n            }\n\n            let label: string = this.props.options[key];\n            const selected = this.props.selectedOptionValue === key;\n            optionsList.push(<option className={this.classes(\"Select__option\")} value={key} key={key} selected={selected}>{label}</option>);\n        }\n\n        return optionsList;\n    }\n\n    private buildSelectProperties(): React.SelectHTMLAttributes<HTMLSelectElement> {\n        const properties: React.SelectHTMLAttributes<HTMLSelectElement> = {};\n        if (this.props.onChange) {\n            properties.onChange = this.props.onChange;\n        }\n        if (this.props.name != null) {\n            properties.name = this.props.name;\n        }\n        if (this.props.selectedOptionValue != null) {\n            properties.value = this.props.selectedOptionValue;\n        }\n        if (this.props.loading || this.props.disabled) {\n            properties.tabIndex = -1;\n        }\n        if (this.props.disabled) {\n            properties[\"aria-disabled\"] = \"true\";\n            properties.disabled = this.props.disabled;\n        }\n\n        properties.children = this.buildOptionsList();\n\n        return properties;\n    }\n\n    public render() {\n        const className = this.classes(\n          \"Select\",\n          (this.props.size == null ? \"\" : \"Select--\" + this.props.size),\n          (this.props.level == null ? \"\" : \"Select--\" + this.props.level),\n          (this.props.active ? \"is-active\" : \"\"),\n          (this.props.loading ? \"is-loading\" : \"\"),\n          (this.props.disabled ? \"is-disabled\" : \"\"),\n          (this.props.className == null ? \"\" : this.props.className)\n        );\n\n        return <div className={className}>\n            <select {...this.buildSelectProperties()} />\n        </div>;\n    }\n}\n"]}