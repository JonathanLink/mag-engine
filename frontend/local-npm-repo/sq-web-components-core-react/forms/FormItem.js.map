{"version":3,"sources":["forms/FormItem.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,gBAA2C,MAAM,2BAA2B,CAAC;AAiDpF;IAAsC,4BAAmC;IAAzE;;IAwBA,CAAC;IArBQ,yBAAM,GAAb;QACE,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAChE,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,aAAa,EAAE,QAAQ,IAAI,WAAW,CAAC,CAAC;QAClI,IAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,UAAU,CAAC,CAAC;QAE5J,MAAM,CAAC,6BAAK,SAAS,EAAE,SAAS;YAC9B,6BAAK,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC;gBACnD,+BAAO,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAC5C,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,IAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAS;gBAC9D,6BAAK,SAAS,EAAE,gBAAgB,IAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAChB,CACF;YACL,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,CAC1B,6BACE,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAC7C,IAAI,CAAC,KAAK,CAAC,YAAY,CACpB,CACP,CACG,CAAC;IACT,CAAC;IAtBa,oBAAW,GAAG,UAAU,CAAC;IAuBzC,eAAC;CAxBD,AAwBC,CAxBqC,gBAAgB,GAwBrD;eAxBoB,QAAQ","file":"FormItem.js","sourcesContent":["import * as React from \"react\";\n\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\n\nexport interface FormItemProps extends NamespaceWrapperProps {\n  /**\n   * The label to display with the form\n   */\n  label ?: React.ReactNode;\n\n  /**\n   * The error message to display\n   */\n  errorMessage ?: React.ReactNode;\n\n  /**\n   * Append a class name\n   */\n  className ?: string;\n\n  /**\n   * Append a class name on Form__item__control\n   */\n  controlClassName ?: string;\n\n  /**\n   * The \"for\" attribute\n   */\n  htmlFor ?: string;\n\n  /**\n   * Does this element have addons ?\n   */\n  addons ?: boolean;\n\n  /**\n   * Does this element have icons ?\n   */\n  icons ?: boolean;\n\n  /**\n   * Is the field required ?\n   */\n  required ?: boolean;\n\n  /**\n   * Is there an error ? becomes true when an errorMessage is set\n   */\n  hasError ?: boolean;\n}\n\nexport default class FormItem extends NamespaceWrapper<FormItemProps, {}> {\n  public static displayName = \"FormItem\";\n\n  public render() {\n    const hasError = this.props.hasError || this.props.errorMessage;\n    const className = this.classes(\"Form__item\", this.props.className, this.props.required && \"is-required\", hasError && \"has-error\");\n    const controlClassName = this.classes(\"Form__item__control\", this.props.controlClassName, this.props.addons && \"has-addon\", this.props.icons && \"has-icon\");\n\n    return <div className={className}>\n      <div className={this.classes(\"Form__item__container\")}>\n        <label className={this.classes(\"Form__item__label\")}\n               htmlFor={this.props.htmlFor}>{this.props.label}</label>\n        <div className={controlClassName}>\n          {this.props.children}\n        </div>\n      </div>\n      {this.props.errorMessage && (\n        <div\n          className={this.classes(\"Form__item__message\")}>\n          {this.props.errorMessage}\n        </div>\n      )}\n    </div>;\n  }\n}\n"]}