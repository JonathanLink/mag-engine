{"version":3,"sources":["forms/Search.tsx"],"names":[],"mappings":"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","file":"Search.js","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\nimport {InputProps, default as Input} from \"./Input\";\nimport Button, {ButtonProps} from \"./Button\";\n\nimport {IconSearch} from \"sq-web-icons\";\n\nexport interface SearchProps extends InputProps, NamespaceWrapperProps {\n    /**\n     * Triggers action\n     */\n    onClick ?: (event: React.SyntheticEvent<HTMLElement>) => void;\n}\n\nexport interface SearchState {\n    value ?: string;\n}\n\nexport default class Search extends NamespaceWrapper<SearchProps, SearchState> {\n    public static displayName = \"Search\";\n\n    public static propTypes = {//\n        // Field props\n        \"id\": PropTypes.string, //\n        \"value\": PropTypes.string, //\n        \"defaultValue\": PropTypes.string, //\n        \"placeholder\": PropTypes.string, //\n        \"type\": PropTypes.string, //\n        \"name\": PropTypes.string, //\n        \"maxLength\": PropTypes.number, //\n        \"disabled\": PropTypes.bool, //\n        \"readOnly\": PropTypes.bool, //\n        \"onChange\": PropTypes.func, //\n        \"size\": PropTypes.oneOf([\"small\", \"large\"]), //\n\n        // Search props\n        \"onClick\": PropTypes.func, //\n        \"className\": PropTypes.string, //\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: this.props.value || this.props.defaultValue\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps: SearchProps) {\n        if (this.props.value !== nextProps.value) {\n            this.setState({value: this.props.value});\n        }\n    }\n\n    handleChange(event) {\n        if (this.props.onChange) {\n            this.props.onChange(event);\n        }\n\n        this.setState({value: event.target.value});\n    }\n\n    handleClear(event) {\n        const {...eventClone} = event;\n        this.setState({value: \"\"}, () => {\n            this.handleChange(eventClone);\n        });\n    }\n\n    render() {\n        const {onClick, onChange, className, children, ...inputProps} = this.props;\n\n        const searchClassName = this.classes(\n            \"Search\",\n            (this.props.size ? \"Search--\" + this.props.size : \"\"),\n            (this.props.disabled ? \"is-disabled\" : \"\"),\n            (this.props.onClick ? \"has-action\" : \"\"),\n            (this.state.value ? \"has-text\" : \"\"),\n            (className ? className : \"\")\n        );\n\n        const buttonConfig: ButtonProps = {variant: \"text\"};\n\n        if (this.props.size) {\n            buttonConfig.size = this.props.size;\n        }\n\n        if (this.props.disabled) {\n            buttonConfig.disabled = this.props.disabled;\n        }\n\n        return (\n            <form className={searchClassName}>\n                <span className={this.classes(\"Search__input\")}>\n                    <Input type=\"search\" onChange={this.handleChange} {...inputProps} />\n                </span>\n                <span className={this.classes(\"Search__clear\")}>\n                    <Button type=\"reset\" onClick={this.handleClear} {...buttonConfig} children={\"Ã—\"} />\n                </span>\n                {this.props.onClick && (\n                    <span className={this.classes(\"Search__action\")}>\n                        <Button onClick={this.props.onClick} {...buttonConfig} children={<IconSearch />} />\n                    </span>\n                )}\n            </form>\n        );\n    }\n}\n"]}