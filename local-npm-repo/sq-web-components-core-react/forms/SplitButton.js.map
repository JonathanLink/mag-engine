{"version":3,"sources":["forms/SplitButton.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AACvD,OAAO,MAAM,MAAM,cAAc,CAAC;AAClC,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,OAAO,gBAA2C,MAAM,2BAA2B,CAAC;AAgBpF;IAAyC,+BAAoD;IAE3F,qBAAY,KAAK;QAAjB,YACE,kBAAM,KAAK,CAAC,SAKb;QAED,iBAAW,GAAG;YACZ,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC;YACT,CAAC;YAED,KAAI,CAAC,QAAQ,CAAC;gBACZ,IAAI,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI;aACvB,CAAC,CAAC;QACL,CAAC,CAAA;QAbC,KAAI,CAAC,KAAK,GAAG;YACX,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,KAAK;SAC1B,CAAC;;IACJ,CAAC;IAYD,mCAAa,GAAb;QAAA,iBAaC;QAZC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,UAAU,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC5B,CAAC;QAED,MAAM,CAAC,UAAC,OAAkD;YACxD,MAAM,CAAE,KAAI,CAAC,KAAK,CAAC,OAA2B,CAAC;gBAC7C,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,SAAS,EAAE,OAAO,CAAC,SAAS;gBAC5B,MAAM,EAAE,KAAI,CAAC,KAAK,CAAC,IAAI;gBACvB,KAAK,EAAE,8BAAM,SAAS,EAAE,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAS;aACvD,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,4BAAM,GAAN;QACE,MAAM,CAAC,oBAAC,OAAO,IAAC,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC;YAC9C,IAAI,CAAC,KAAK,CAAC,KAAK;YAEjB,oBAAC,MAAM,IAAC,OAAO,EAAE,IAAI,CAAC,WAAW,IAAG,IAAI,CAAC,aAAa,EAAE,CAAU;YAEjE,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,oBAAC,MAAM;gBACzB,oBAAC,MAAM,IAAC,SAAS,EAAC,YAAY,IAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,CACb,CACF,CACH,CAAC;IACb,CAAC;IACH,kBAAC;AAAD,CAhDA,AAgDC,CAhDwC,gBAAgB,GAgDxD","file":"SplitButton.js","sourcesContent":["import * as React from \"react\";\nimport { Manager, Popper, Target } from \"react-popper\";\nimport Portal from \"react-travel\";\nimport ButtonGroup from \"./ButtonGroup\";\n\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\n\nexport type triggerFunction = (options: { isOpen: boolean, caret: React.ReactNode, arrowProps: object, restProps: object }) => React.ReactNode;\n\nexport interface SplitButtonProps extends NamespaceWrapperProps {\n  title: React.ReactNode;\n  open?: boolean;\n  trigger: React.ReactNode | triggerFunction;\n}\n\n//\n\nexport interface SplitButtonState {\n  open?: boolean;\n}\n\nexport default class SplitButton extends NamespaceWrapper<SplitButtonProps, SplitButtonState> {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open || false\n    };\n  }\n\n  handleClick = () => {\n    if (this.props.open) {\n      return;\n    }\n\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  renderTrigger() {\n    if (typeof this.props.trigger !== \"function\") {\n      return this.props.trigger;\n    }\n\n    return (options: { arrowProps: object, restProps: object }) => {\n      return (this.props.trigger as triggerFunction)({\n        arrowProps: options.arrowProps,\n        restProps: options.restProps,\n        isOpen: this.state.open,\n        caret: <span className={this.classes(\"Caret\")}></span>\n      });\n    };\n  }\n\n  render() {\n    return <Manager component={ButtonGroup} tabIndex={0}>\n        {this.props.title}\n\n        <Target onClick={this.handleClick}>{this.renderTrigger()}</Target>\n\n        {this.state.open && <Portal>\n          <Popper placement=\"bottom-end\">\n            {this.props.children}\n          </Popper>\n        </Portal>}\n    </Manager>;\n  }\n}\n"]}