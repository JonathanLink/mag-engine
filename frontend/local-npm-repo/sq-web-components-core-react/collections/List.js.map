{"version":3,"sources":["collections/List.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,SAAS,MAAM,YAAY,CAAC;AAExC,OAAO,gBAA2C,MAAM,2BAA2B,CAAC;AAQpF;IAAkC,wBAA2B;IAA7D;;IAsBA,CAAC;IAZC,qBAAM,GAAN;QACE,IAAM,eAAwE,EAAvE,wBAAS,EAAE,oBAAO,EAAE,cAAI,EAAE,0BAAU,EAAE,wBAAS,EAAE,+EAAsB,CAAC;QAC/E,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAC1B,MAAM,EACN,OAAO,IAAI,aAAa,EACxB,IAAI,IAAI,QAAQ,GAAG,IAAI,EACvB,UAAU,IAAI,kBAAkB,EAChC,SAAS,CACV,CAAC;QAEF,MAAM,CAAC,qCAAI,SAAS,EAAE,OAAO,IAAM,KAAK,EAAI,CAAC;IAC/C,CAAC;IAnBM,cAAS,GAAG;QACjB,SAAS,EAAE,SAAS,CAAC,MAAM;QAC3B,IAAI,EAAE,SAAS,CAAC,MAAM;QACtB,iGAAiG;QACjG,OAAO,EAAE,SAAS,CAAC,IAAI;QACvB,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;KACpC,CAAC;IAcJ,WAAC;CAtBD,AAsBC,CAtBiC,gBAAgB,GAsBjD;eAtBoB,IAAI;AA6BzB;IAA8B,4BAA+B;IAA7D;;IAaA,CAAC;IANC,yBAAM,GAAN;QACE,IAAM,eAAkE,EAAjE,wBAAS,EAAE,oBAAO,EAAE,0BAAU,EAAE,wBAAS,EAAE,uEAAsB,CAAC;QACzE,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,IAAI,aAAa,EAAE,UAAU,IAAI,aAAa,EAAE,SAAS,CAAC,CAAC;QAE7G,MAAM,CAAC,qCAAI,SAAS,EAAE,OAAO,IAAM,KAAK,EAAI,CAAC;IAC/C,CAAC;IAXM,kBAAS,GAAG;QACjB,SAAS,EAAE,SAAS,CAAC,MAAM;QAC3B,OAAO,EAAE,SAAS,CAAC,IAAI;QACvB,UAAU,EAAE,SAAS,CAAC,IAAI;KAC3B,CAAC;IAQJ,eAAC;CAbD,AAaC,CAb6B,gBAAgB,GAa7C;SAbY,QAAQ","file":"List.js","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\n\nexport interface ListProps extends React.HTMLAttributes<HTMLUListElement>, NamespaceWrapperProps {\n  size?: \"small\" | \"large\";\n  horizontal?: boolean;\n  divided?: boolean;\n}\n\nexport default class List extends NamespaceWrapper<ListProps> {\n\n  static propTypes = {\n    className: PropTypes.string,\n    size: PropTypes.string,\n    // variant: PropTypes.string, //FIXME: gives a validation error in TypeScript for whatever reason\n    divided: PropTypes.bool,\n    children: PropTypes.node.isRequired\n  };\n\n  render() {\n    const {namespace, divided, size, horizontal, className, ...props} = this.props;\n    const classes = this.classes(\n      \"List\",\n      divided && \"has-divider\",\n      size && \"List--\" + size,\n      horizontal && \"List--horizontal\",\n      className\n    );\n\n    return <ul className={classes} {...props} />;\n  }\n}\n\nexport interface ListItemProps extends React.LiHTMLAttributes<HTMLLIElement>, NamespaceWrapperProps {\n  divided?: boolean;\n  hasSublist?: boolean;\n}\n\nexport class ListItem extends NamespaceWrapper<ListItemProps> {\n  static propTypes = {\n    className: PropTypes.string,\n    divided: PropTypes.bool,\n    hasSublist: PropTypes.bool\n  };\n\n  render() {\n    const {namespace, divided, hasSublist, className, ...props} = this.props;\n    const classes = this.classes(\"List__item\", divided && \"has-divider\", hasSublist && \"has-sublist\", className);\n\n    return <li className={classes} {...props} />;\n  }\n}\n"]}