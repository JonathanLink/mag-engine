{"version":3,"sources":["forms/Radio.tsx"],"names":[],"mappings":"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","file":"Radio.js","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\nimport { RadioGroupContext } from \"./RadioGroup\";\n\nexport interface RadioProps extends NamespaceWrapperProps {\n  /**\n   * Name of the field\n   */\n  name?: string;\n\n  /**\n   * Is it checked by default ?\n   */\n  defaultChecked?: boolean;\n\n  /**\n   * Is it currently checked\n   */\n  checked?: boolean;\n\n  /**\n   * Triggered on any change\n   */\n  onChange?: (checked: boolean, event: React.ChangeEvent<HTMLInputElement>) => void;\n\n  /**\n   * Disables the switch\n   */\n  disabled?: boolean;\n\n  /**\n   * Add a class name\n   */\n  className?: string;\n\n  /**\n   * Value of the field\n   */\n  value?: string;\n}\n\nexport default class Radio extends NamespaceWrapper<RadioProps, {}> {\n  context: RadioGroupContext;\n\n  public static displayName = \"Radio\";\n\n  public static propTypes = {//\n    \"value\": PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.bool,\n    ]), //\n    \"disabled\": PropTypes.bool, //\n    \"className\": PropTypes.string, //\n\n    // Only for standalone\n    \"name\": PropTypes.string, //\n    \"defaultChecked\": PropTypes.bool, //\n    \"checked\": PropTypes.bool, //\n    \"onChange\": PropTypes.func //\n  };\n\n  static contextTypes = {\n    namespace: PropTypes.string,\n    radioGroup: PropTypes.object\n  };\n\n  public renderInput() {\n    const options: React.InputHTMLAttributes<HTMLInputElement> = {};\n\n    // The name on the Radio takes\n    // precedence on the name on the RadioGroup\n    if (this.props.name != null) {\n      options.name = this.props.name;\n    } else if (this.context.radioGroup && this.context.radioGroup.name !== undefined) {\n      options.name = this.context.radioGroup.name;\n    }\n\n    // The checked state on the Radio takes\n    // precedence on the one of the RadioGroup\n    if (this.props.checked != null) {\n      options.checked = this.props.checked;\n    } else if (this.context.radioGroup && this.context.radioGroup.selectedValue !== undefined) {\n      options.checked = (this.props.value === this.context.radioGroup.selectedValue);\n    }\n\n    if (this.props.defaultChecked != null) {\n      options.defaultChecked = this.props.defaultChecked;\n    }\n\n    return <input onChange={this.handleChange} type=\"radio\"\n                  value={this.props.value}\n                  disabled={!!this.props.disabled} {...options} />;\n  }\n\n  handleChange = (e) => {\n    // Call it on the RadioGroup\n    if (this.context.radioGroup && typeof this.context.radioGroup.onChange === \"function\") {\n      this.context.radioGroup.onChange(this.props.value, e);\n    }\n\n    // Call it on the component itself\n    if (typeof this.props.onChange === \"function\") {\n      this.props.onChange(e.checked, e);\n    }\n  }\n\n  public render() {\n    const classes: string = this.classes(\"Radio\", this.props.className == null ? \"\" : this.props.className);\n\n    return <label className={classes}>\n      {this.renderInput()}\n      <span className={this.classes(\"Radio__label\")}>{this.props.children}</span>\n    </label>;\n  }\n}\n"]}