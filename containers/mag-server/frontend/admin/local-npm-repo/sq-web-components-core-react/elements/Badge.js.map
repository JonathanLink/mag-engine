{"version":3,"sources":["elements/Badge.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,SAAS,MAAM,YAAY,CAAC;AAExC,OAAO,gBAA2C,MAAM,2BAA2B,CAAC;AAwBpF;IAAmC,yBAAgC;IAAnE;;IA8BA,CAAC;IAZU,sBAAM,GAAb;QACI,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAC5B,OAAO,EACP,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAClD,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAChD,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,aAAa,CAAC,EAClC,IAAI,CAAC,KAAK,CAAC,SAAS,CACrB,CAAC;QACF,MAAM,CAAC,8BAAM,SAAS,EAAE,SAAS,IAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,CACb,CAAC;IAChB,CAAC;IA5Ba,iBAAW,GAAG,OAAO,CAAC;IACtB,eAAS,GAAG;QACtB,YAAY;QACZ,WAAW,EAAE,SAAS,CAAC,MAAM;QAC7B,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QACjE,MAAM,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAE3C,SAAS;QACT,MAAM,EAAE,SAAS,CAAC,IAAI;QAEtB,aAAa;QACb,OAAO,EAAE,SAAS,CAAC,MAAM;QACzB,MAAM,EAAE,SAAS,CAAC,MAAM;QACxB,yBAAyB,EAAE,SAAS,CAAC,MAAM;QAC3C,gBAAgB,EAAE,SAAS,CAAC,MAAM,CAAC,EAAE;KACxC,CAAC;IAcN,YAAC;CA9BD,AA8BC,CA9BkC,gBAAgB,GA8BlD;eA9BoB,KAAK","file":"Badge.js","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\n\nexport interface BadgeProps extends NamespaceWrapperProps {\n    /**\n     * Set a class for the badge, prefer modifiers\n     */\n    className?: string;\n\n    /**\n     * Set the size of the button\n     */\n    size ?: \"small\" | \"large\";\n\n    /**\n     * Set the color of the button\n     */\n    level ?: \"info\" | \"warning\" | \"error\" | \"success\";\n\n    /**\n     * Show badge as a pill\n     */\n    pill ?: boolean;\n}\n\nexport default class Badge extends NamespaceWrapper<BadgeProps, {}> {\n    public static displayName = \"Badge\";\n    public static propTypes = {//\n        // Modifiers\n        \"className\": PropTypes.string, //\n        \"level\": PropTypes.oneOf([\"info\", \"warning\", \"error\", \"success\"]), //\n        \"size\": PropTypes.oneOf([\"small\", \"large\"]), //\n\n        // States\n        \"pill\": PropTypes.bool, //\n\n        // Deprecated\n        \"color\": PropTypes.string, //\n        \"text\": PropTypes.string, //\n        \"boldTextPositionFromEnd\": PropTypes.number, //\n        \"boldTextLength\": PropTypes.number //\n    };\n\n    public render() {\n        const className = this.classes(\n          \"Badge\",\n          (this.props.level && \"Badge--\" + this.props.level),\n          (this.props.size && \"Badge--\" + this.props.size),\n          (this.props.pill && \"Badge--pill\"),\n          this.props.className\n        );\n        return <span className={className}>\n            {this.props.children}\n            </span>;\n    }\n}\n"]}