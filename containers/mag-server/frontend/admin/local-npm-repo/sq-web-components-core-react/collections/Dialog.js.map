{"version":3,"sources":["collections/Dialog.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,gBAA2C,MAAM,2BAA2B,CAAC;AACpF,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,MAAM,MAAM,cAAc,CAAC;AAYlC;IAAoC,0BAAiC;IAArE;QAAA,qEAmCC;QAlCC,iBAAW,GAAG;YACZ,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QACvB,CAAC,CAAC;;IAgCJ,CAAC;IA9BC,+BAAc,GAAd,UAAe,QAAQ;QACrB,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,QAAQ,CACb,8BAAM,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EACxC,OAAO,EAAE,IAAI,CAAC,WAAW;gBAC/B,oBAAC,SAAS,OAAG,CACR,CACN,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAED,uBAAM,GAAN;QACE,IAAM,eAAgF,EAA/E,wBAAS,EAAE,wBAAS,EAAE,sBAAQ,EAAE,cAAI,EAAE,sBAAQ,EAAE,oBAAO,EAAE,yFAAsB,CAAC;QACvF,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAC1B,QAAQ,EACR,SAAS,EACT,CAAC,QAAQ,IAAI,cAAc,CAAC,EAC5B,SAAS,CACV,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,oBAAC,MAAM;YACnB,sCAAK,SAAS,EAAE,OAAO,iBAAc,OAAO,EAAC,IAAI,EAAC,QAAQ,IAAK,KAAK;gBAClE,6BAAK,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAC5C,IAAI,EAAC,UAAU,IACjB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAC1B,CACF,CACC,CAAC,CAAC,CAAC,iCAAQ,CAAC;IACvB,CAAC;IACH,aAAC;AAAD,CAnCA,AAmCC,CAnCmC,gBAAgB,GAmCnD;;AAKD;IAAkC,gCAAmC;IAArE;;IAMA,CAAC;IALC,6BAAM,GAAN;QACE,IAAM,eAA6C,EAA5C,wBAAS,EAAE,wBAAS,EAAE,8CAAsB,CAAC;QACpD,MAAM,CAAC,sCACL,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,SAAS,CAAC,IAAM,KAAK,EAAI,CAAC;IACxE,CAAC;IACH,mBAAC;AAAD,CANA,AAMC,CANiC,gBAAgB,GAMjD;;AAKD;IAAkC,gCAAmC;IAArE;;IAMA,CAAC;IALC,6BAAM,GAAN;QACE,IAAM,eAA6C,EAA5C,wBAAS,EAAE,wBAAS,EAAE,8CAAsB,CAAC;QACpD,MAAM,CAAC,sCACL,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,SAAS,CAAC,IAAM,KAAK,EAAI,CAAC;IACxE,CAAC;IACH,mBAAC;AAAD,CANA,AAMC,CANiC,gBAAgB,GAMjD;;AAKD;IAAmC,iCAAoC;IAAvE;;IAKA,CAAC;IAJC,8BAAM,GAAN;QACE,IAAM,eAA6C,EAA5C,wBAAS,EAAE,wBAAS,EAAE,8CAAsB,CAAC;QACpD,MAAM,CAAC,sCAAK,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,SAAS,CAAC,IAAM,KAAK,EAAI,CAAC;IACnF,CAAC;IACH,oBAAC;AAAD,CALA,AAKC,CALkC,gBAAgB,GAKlD","file":"Dialog.js","sourcesContent":["import * as React from \"react\";\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\nimport { IconClose } from \"sq-web-icons\";\nimport Portal from \"react-travel\";\n\nexport interface DialogProps extends React.HTMLAttributes<HTMLDivElement>, NamespaceWrapperProps {\n  open?: boolean;\n\n  backdrop?: boolean;\n\n  children?: ((close: React.ReactNode) => React.ReactNode) | React.ReactNode;\n\n  onClose?: () => void;\n}\n\nexport default class Dialog extends NamespaceWrapper<DialogProps, {}> {\n  handleClose = () => {\n    this.props.onClose();\n  };\n\n  renderChildren(children) {\n    if (typeof children === \"function\") {\n      return children(\n        <span className={this.classes(\"Dialog__close\")}\n              onClick={this.handleClose}>\n        <IconClose />\n      </span>\n      );\n    }\n\n    return children;\n  }\n\n  render() {\n    const {namespace, className, backdrop, open, children, onClose, ...props} = this.props;\n    const classes = this.classes(\n      \"Dialog\",\n      \"is-open\",\n      (backdrop && \"has-backdrop\"),\n      className\n    );\n    return open ? <Portal>\n      <div className={classes} aria-hidden=\"false\" role=\"dialog\" {...props}>\n        <div className={this.classes(\"Dialog__container\")}\n             role=\"document\">\n          {this.renderChildren(children)}\n        </div>\n      </div>\n    </Portal> : <span />;\n  }\n}\n\nexport interface DialogHeaderProps extends React.HTMLAttributes<HTMLDivElement>, NamespaceWrapperProps {\n}\n\nexport class DialogHeader extends NamespaceWrapper<DialogHeaderProps> {\n  render() {\n    const {namespace, className, ...props} = this.props;\n    return <div\n      className={this.classes(\"Dialog__header\", className)} {...props} />;\n  }\n}\n\nexport interface DialogFooterProps extends React.HTMLAttributes<HTMLDivElement>, NamespaceWrapperProps {\n}\n\nexport class DialogFooter extends NamespaceWrapper<DialogFooterProps> {\n  render() {\n    const {namespace, className, ...props} = this.props;\n    return <div\n      className={this.classes(\"Dialog__footer\", className)} {...props} />;\n  }\n}\n\nexport interface DialogContentProps extends React.HTMLAttributes<HTMLDivElement>, NamespaceWrapperProps {\n}\n\nexport class DialogContent extends NamespaceWrapper<DialogContentProps> {\n  render() {\n    const {namespace, className, ...props} = this.props;\n    return <div className={this.classes(\"Dialog__content\", className)} {...props} />;\n  }\n}\n"]}