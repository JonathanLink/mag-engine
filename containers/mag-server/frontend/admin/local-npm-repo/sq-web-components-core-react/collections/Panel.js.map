{"version":3,"sources":["collections/Panel.tsx"],"names":[],"mappings":"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","file":"Panel.js","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\n\nexport interface PanelProps extends NamespaceWrapperProps {\n    /**\n     * The panel's title\n     */\n    title ?: React.ReactNode;\n\n    /**\n     * Set the size of the button\n     */\n    size ?: \"xsmall\" | \"small\" | \"medium\" | \"large\" | \"xlarge\";\n\n    /**\n     * Set the color of the button\n     */\n    level ?: \"info\" | \"warning\" | \"error\" | \"success\";\n\n    /**\n     * Class names to apply to the container\n     */\n    className ?: string;\n\n    /**\n     * Class names to apply to the title\n     */\n    titleClassName ?: string;\n\n    /**\n     * Class names to apply to the content\n     */\n    contentClassName ?: string;\n\n    /**\n     * Can the panel be opened / closed ? (true by default)\n     */\n    active ?: boolean;\n\n    /**\n     * Is the panel opened / closed ? (false by default)\n     */\n    collapsed ?: boolean;\n}\n\nexport interface PanelState {\n    /**\n     * To keep the real state\n     */\n    collapsed ?: boolean;\n}\n\n\nexport default class Panel extends NamespaceWrapper<PanelProps, PanelState> {\n    public static displayName = \"Panel\";\n\n    public static propTypes = {//\n        \"title\": PropTypes.node, //\n\n        // Modifiers\n        \"className\": PropTypes.string, //\n        \"titleClassName\": PropTypes.string, //\n        \"contentClassName\": PropTypes.string, //\n        \"level\": PropTypes.oneOf([\"info\", \"warning\", \"error\", \"success\"]), //\n        \"size\": PropTypes.oneOf([\"xsmall\", \"small\", \"medium\", \"large\", \"xlarge\"]), //\n\n        // States\n        \"active\": PropTypes.bool, //\n        \"collapsed\": PropTypes.bool //\n    };\n\n    static defaultProps: PanelProps = {\n        active: true,\n        collapsed: false\n    };\n\n    constructor(props: PanelProps) {\n        super(props);\n\n        this.state = {\n            collapsed: this.isCollapsed(props)\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    public isCollapsed(panelProps: PanelProps): boolean {\n        return panelProps.collapsed;\n    }\n\n    public componentWillReceiveProps(panelProps: PanelProps) {\n        if (this.isCollapsed(panelProps) !== this.isCollapsed(this.props)) {\n            this.setState({collapsed: this.isCollapsed(panelProps)});\n        }\n    }\n\n    public handleClick(e: React.SyntheticEvent<HTMLElement>) {\n        if (!this.props.active) {\n            return;\n        }\n        this.setState({collapsed: !this.state.collapsed});\n    }\n\n    public render() {\n        const className = this.classes(\"Panel\", this.props.level && \"Panel--\" + this.props.level, this.props.size && \"Badge--\" + this.props.size, this.state.collapsed && \"is-collapsed\", this.props.className);\n        const titleClassName = this.classes(\"Panel__title\", this.props.titleClassName);\n        const contentClassName = this.classes(\"Panel__content\", this.props.contentClassName);\n\n        return <div className={className}>\n            <div className={titleClassName} onClick={this.handleClick}>{this.props.title}</div>\n            <div className={contentClassName}>{this.props.children}</div>\n        </div>;\n    }\n}\n"]}