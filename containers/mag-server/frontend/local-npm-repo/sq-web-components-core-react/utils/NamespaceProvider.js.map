{"version":3,"sources":["utils/NamespaceProvider.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,SAAS,MAAM,YAAY,CAAC;AAMxC;IAA+C,qCAA2C;IAA1F;;IAmBA,CAAC;IATC,2CAAe,GAAf;QACU,IAAA,gCAAS,CAAgB;QACjC,MAAM,CAAC,EAAE,SAAS,WAAA,EAAE,CAAC;IACvB,CAAC;IAED,kCAAM,GAAN;QACE,8DAA8D;QAC9D,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC;IAjBM,2BAAS,GAAG;QACjB,SAAS,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;KACvC,CAAC;IAEF,qDAAqD;IAC9C,mCAAiB,GAAG;QACzB,SAAS,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;KACvC,CAAE;IAWL,wBAAC;CAnBD,AAmBC,CAnB8C,KAAK,CAAC,SAAS,GAmB7D;eAnBoB,iBAAiB","file":"NamespaceProvider.js","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nexport interface NamespaceProviderProps {\n  namespace: string;\n}\n\nexport default class NamespaceProvider extends React.Component<NamespaceProviderProps, {}> {\n  static propTypes = {\n    namespace: PropTypes.object.isRequired,\n  };\n\n  // you must specify what youâ€™re adding to the context\n  static childContextTypes = {\n    namespace: PropTypes.object.isRequired,\n  } ;\n\n  getChildContext() {\n    const { namespace } = this.props;\n    return { namespace };\n  }\n\n  render() {\n    // `Children.only` enables us not to add a <div /> for nothing\n    return React.Children.only(this.props.children);\n  }\n}\n"]}