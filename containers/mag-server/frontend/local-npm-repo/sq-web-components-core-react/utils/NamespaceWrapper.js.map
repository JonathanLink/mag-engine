{"version":3,"sources":["utils/NamespaceWrapper.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,SAAS,MAAM,YAAY,CAAC;AAExC,IAAM,WAAW,GAAG,iEAAiE,CAAC;AAMtF;IAAuE,oCAA6C;IAApH;;IAiBA,CAAC;IAZC,uCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;IACxD,CAAC;IAED,kCAAO,GAAP;QAAQ,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;QACb,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;QACtC,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACnC,IAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG;aAC5B,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAvB,CAAuB,CAAC;aACvC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAG,MAAM,SAAI,IAAM,EAAnB,CAAmB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACzC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;IAfM,6BAAY,GAAG;QACpB,SAAS,EAAE,SAAS,CAAC,MAAM;KAC5B,CAAC;IAcJ,uBAAC;CAjBD,AAiBC,CAjBsE,KAAK,CAAC,SAAS,GAiBrF;eAjB6B,gBAAgB;AAiB7C,CAAC","file":"NamespaceWrapper.js","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nconst isComponent = /^[A-Z][a-zA-Z0-9]*(__[a-z][a-zA-Z0-9]+)*(--[a-z][a-zA-Z0-9]+)*$/;\n\nexport interface NamespaceWrapperProps {\n  namespace ?: string;\n}\n\nexport default abstract class NamespaceWrapper<P = {}, S = {}> extends React.Component<P & NamespaceWrapperProps, S> {\n  static contextTypes = {\n    namespace: PropTypes.string\n  };\n\n  getNamespace(): string  {\n    return this.props.namespace || this.context.namespace;\n  }\n\n  classes(...args): string {\n    const raw = args.filter(item => item);\n    const prefix = this.getNamespace();\n    const namespaced = prefix ? raw\n      .filter(item => item.match(isComponent))\n      .map(item => `${prefix}-${item}`) : [];\n    return raw.concat(namespaced).join(\" \");\n  }\n};\n"]}