{"version":3,"sources":["elements/Popup.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,SAAS,MAAM,YAAY,CAAC;AAExC,OAAO,EAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAC,MAAM,cAAc,CAAC;AAC5D,OAAO,MAAM,MAAM,cAAc,CAAC;AAElC,OAAO,gBAA2C,MAAM,2BAA2B,CAAC;AAuCpF;IAAmC,yBAAwC;IAgBzE,eAAa,KAAK;QAAlB,YACE,kBAAM,KAAK,CAAC,SAKb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,KAAK;SAClB,CAAC;;IACJ,CAAC;IAEC,8BAAc,GAAd;QAAA,iBAeD;QAdK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC;gBACH,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,EAArD,CAAqD;aACvE,CAAC;QACN,CAAC;QAED,MAAM,CAAC;YACH,WAAW,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,EAAnC,CAAmC;YACtD,UAAU,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,EAApC,CAAoC;SACzD,CAAC;IACR,CAAC;IAED,sBAAM,GAAN;QACE,MAAM,CAAC,CACH,oBAAC,OAAO,IAAC,SAAS,EAAC,MAAM,EAAC,KAAK,EAAE,EAAC,OAAO,EAAE,cAAc,EAAC;YACtD,oBAAC,MAAM,aAAC,SAAS,EAAC,MAAM,EAAC,KAAK,EAAE,EAAC,OAAO,EAAE,cAAc,EAAC,IAAM,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAU;YACnH,IAAI,CAAC,OAAO,EAAE,CACT,CACb,CAAC;IACJ,CAAC;IAED,uBAAO,GAAP;QAAA,iBAgBC;QAfC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAEzG,IAAM,eAAyF,EAAxF,sBAAQ,EAAE,oBAAO,EAAE,oBAAO,EAAE,wBAAS,EAAE,gBAAK,EAAE,oBAAO,EAAE,wBAAS,EAAE,oGAAsB,CAAC;QAEhG,MAAM,CAAC,CACH,oBAAC,MAAM;YACH,oBAAC,MAAM,aAAC,SAAS,EAAC,KAAK,EAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,IAAM,KAAK;gBACzE,KAAK,IAAI,6BAAK,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAG,KAAK,CAAO;gBACtE,6BAAK,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAG,OAAO,CAAO;gBAC/D,oBAAC,KAAK,QACD,UAAC,EAAc;wBAAZ,0BAAU;oBAAO,OAAA,uCAAM,SAAS,EAAE,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAM,UAAU,EAAI;gBAAjE,CAAiE,CAClF,CACH,CACJ,CACZ,CAAC;IACJ,CAAC;IAjEM,eAAS,GAAG;QACjB,SAAS,EAAE,SAAS,CAAC,MAAM;QAC3B,KAAK,EAAE,SAAS,CAAC,IAAI;QACrB,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;QAClC,OAAO,EAAE,SAAS,CAAC,IAAI;QACvB,SAAS,EAAE,SAAS,CAAC,MAAM;QAC3B,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAC7C,CAAC;IAEK,kBAAY,GAAG;QACpB,SAAS,EAAE,KAAK;QAChB,SAAS,EAAE,SAAS;QACpB,OAAO,EAAE,OAAO;KACjB,CAAC;IAqDJ,YAAC;CAnED,AAmEC,CAnEkC,gBAAgB,GAmElD;eAnEoB,KAAK","file":"Popup.js","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nimport {Manager, Popper, Target, Arrow} from \"react-popper\";\nimport Portal from \"react-travel\";\n\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\n\nexport interface PopupProps extends NamespaceWrapperProps {\n  /**\n   * The header of the popup\n   */\n  title?: React.ReactNode;\n\n  /**\n   * The content of the popup\n   */\n  content: React.ReactNode;\n\n  /**\n   * Add a class name to the popup\n   */\n  className ?: string;\n\n  /**\n   * Position of tooltip\n   * Can be bottom, top, right, left\n   */\n  placement ?: \"bottom\" | \"top\" | \"right\" | \"left\";\n\n  /**\n   * Is the tooltip visible by default\n   */\n  visible ?: boolean;\n\n  /**\n   * Hover\n   */\n  trigger ?: \"hover\" | \"click\";\n}\n\nexport interface PopupState {\n  shouldShow?: boolean;\n}\n\nexport default class Popup extends NamespaceWrapper<PopupProps, PopupState> {\n  static propTypes = {\n    placement: PropTypes.string,\n    title: PropTypes.node,\n    content: PropTypes.node.isRequired,\n    visible: PropTypes.bool,\n    className: PropTypes.string,\n    trigger: PropTypes.oneOf([\"hover\", \"click\"])\n  };\n\n  static defaultProps = {\n    placement: \"top\",\n    className: \"tooltip\",\n    trigger: \"click\"\n  };\n\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      shouldShow: false,\n    };\n  }\n\n    getActionProps() {\n        if (this.props.visible != null) {\n            return {};\n        }\n\n        if (this.props.trigger === \"click\") {\n            return {\n                onClick: () => this.setState({ shouldShow: !this.state.shouldShow })\n            };\n        }\n\n        return {\n            onMouseOver: () => this.setState({ shouldShow: true }),\n            onMouseOut: () => this.setState({ shouldShow: false })\n        };\n  }\n\n  render() {\n    return (\n        <Manager component=\"span\" style={{display: \"inline-block\"}}>\n            <Target component=\"span\" style={{display: \"inline-block\"}} {...this.getActionProps()}>{this.props.children}</Target>\n            {this._popper()}\n        </Manager>\n    );\n  }\n\n  _popper () {\n    if (this.props.visible !== true && (!this.state.shouldShow || this.props.visible === false)) return null;\n\n    const {children, visible, trigger, namespace, title, content, className, ...props} = this.props;\n\n    return (\n        <Portal>\n            <Popper component=\"div\" className={this.classes(\"Popup\", className)} {...props}>\n                {title && <div className={this.classes(\"Popup__header\")}>{title}</div>}\n                <div className={this.classes(\"Popup__content\")}>{content}</div>\n                <Arrow>\n                    {({ arrowProps }) => <span className={this.classes(\"Popup__arrow\")} {...arrowProps} />}\n                </Arrow>\n            </Popper>\n        </Portal>\n    );\n  }\n}\n"]}