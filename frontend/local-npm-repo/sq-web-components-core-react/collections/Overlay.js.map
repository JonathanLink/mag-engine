{"version":3,"sources":["collections/Overlay.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,gBAA2C,MAAM,2BAA2B,CAAC;AAcpF;IAAqC,2BAAkC;IAAvE;;IAsBA,CAAC;IAdW,sCAAoB,GAA5B;QACI,IAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAClD,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,6BAAK,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAO,CAAC;IACtH,CAAC;IAEM,wBAAM,GAAb;QACI,MAAM,CAAC,6BAAK,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,IAC9H,IAAI,CAAC,oBAAoB,EAAE,CAC1B,CAAC;IACX,CAAC;IApBa,mBAAW,GAAG,SAAS,CAAC;IAC/B,oBAAY,GAAiB;QAChC,SAAS,EAAE,EAAE;QACb,gBAAgB,EAAE,EAAE;QACpB,OAAO,EAAE,KAAK;KACjB,CAAC;IAgBN,cAAC;CAtBD,AAsBC,CAtBoC,gBAAgB,GAsBpD;eAtBoB,OAAO","file":"Overlay.js","sourcesContent":["import * as React from \"react\";\nimport { getChildren } from \"../ReactUtils\";\nimport NamespaceWrapper, { NamespaceWrapperProps } from \"../utils/NamespaceWrapper\";\n\nexport interface OverlayProps extends NamespaceWrapperProps {\n    contentClassName ?: string;\n\n    className ?: string;\n\n    display ?: boolean;\n\n    onHide ?: (event: React.SyntheticEvent<HTMLElement>) => void;\n\n    children ?: React.ReactNode | React.ReactNode[];\n}\n\nexport default class Overlay extends NamespaceWrapper<OverlayProps, {}> {\n    public static displayName = \"Overlay\";\n    static defaultProps: OverlayProps = {\n        className: \"\",\n        contentClassName: \"\",\n        display: false\n    };\n\n    private renderOverlayContent() {\n        const children = getChildren(this.props.children);\n        if (children.length === 0) {\n            return null;\n        }\n\n        return <div className={this.classes(\"Overlay__content\", this.props.contentClassName)}>{this.props.children}</div>;\n    }\n\n    public render() {\n        return <div className={this.classes(\"Overlay\", this.props.display && \"is-active\", this.props.className)} onClick={this.props.onHide}>\n            {this.renderOverlayContent()}\n        </div>;\n    }\n}\n"]}